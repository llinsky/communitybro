
type DHCPV6::DUID_LLT: record {
	hwtype:	 	count 	&log &optional;
	duidtime:	count 	&log &optional;
	lladdr: 	string 	&log &optional;
};

type DHCPV6::DUID_EN: record {
	entnum: 	count 	&log &optional;
	identifier:	string	&log &optional;
};

type DHCPV6::DUID_LL: record {
	hwtype:	 	count 	&log &optional;
	lladdr: 	string 	&log &optional;
};

type DHCPV6::DUID_UUID: record {
	hwtype:	 	count 	&log &optional;
	lladdr: 	string 	&log &optional;
};

type DHCPV6::DOMAIN_NAME: record {
	name:		string	&log &optional;
};		

type DHCPV6::DHCPV6_OPTION_IAADDR: record {
	ipv6_addr:			addr	&log &optional;				
	preferred_lifetime: count	&log &optional;
	valid_lifetime:		count	&log &optional;
	data:				string	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_IA_NA: record {
	iaid:		count							&log &optional;
	t1:			count							&log &optional;
	t2:			count							&log &optional;
	iaaddr:		DHCPV6::DHCPV6_OPTION_IAADDR 	&log &optional;
	data:		string							&log &optional;
};

type DHCPV6::DHCPV6_OPTION_IAPREFIX: record {
	prefix_addr:		addr	&log &optional;				
	preferred_lifetime: count	&log &optional;
	valid_lifetime:		count	&log &optional;
	data:				string	&log &optional;	
};

type DHCPV6::DHCPV6_OPTION_IA_PD: record {
	iaid:		count							&log &optional;
	t1:			count							&log &optional;
	t2:			count							&log &optional;
	iaprefix:	DHCPV6::DHCPV6_OPTION_IAPREFIX 	&log &optional;
	data:		string							&log &optional;
};

type DHCPV6::DHCPV6_OPTION_IA_TA: record {
	iaid:		count	&log &optional;
	data:		string	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_CLIENTID: record {
	msgtype:	count 				&log &optional;
	duid_llt:	DHCPV6::DUID_LLT 	&log &optional;
 	duid_en:	DHCPV6::DUID_EN 	&log &optional;
 	duid_ll:	DHCPV6::DUID_LL 	&log &optional;
 	duid_uuid:	DHCPV6::DUID_UUID 	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_SERVERID: record {
	msgtype:	count 				&log &optional;
	duid_llt:	DHCPV6::DUID_LLT 	&log &optional;
 	duid_en:	DHCPV6::DUID_EN 	&log &optional;
 	duid_ll:	DHCPV6::DUID_LL 	&log &optional;
 	duid_uuid:	DHCPV6::DUID_UUID 	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_ORO: record {
	options:	vector of count &log &optional;
};

type DHCPV6::DHCPV6_OPTION_ELAPSED_TIME: record {
	elapsed_time:		count 	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_DNS_SERVERS: record {
	dns_name_servers: 	vector of addr 	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_DOMAIN_LIST: record {
	searchlist: 	string 	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_VENDOR_CLASS: record {
	enterprise_number: 	count	&log &optional;
	vendor_class_data: 	string	&log &optional;
};

type DHCPV6::DHCPV6_OPTION_INFO_REFRESH_TIME: record {
	refresh_time:	count		&log &optional;
};

type DHCPV6::DHCPV6_OPTION_CLIENT_FQDN: record {
	flags:			count		&log &optional;
	domain_name:	string		&log &optional;
};

type DHCPV6::Options: record {
	clientid:			DHCPV6::DHCPV6_OPTION_CLIENTID 			&log &optional; #  0
	serverid:			DHCPV6::DHCPV6_OPTION_SERVERID			&log &optional; #  1
	ia_na:				DHCPV6::DHCPV6_OPTION_IA_NA				&log &optional; #  2
	ia_ta:				DHCPV6::DHCPV6_OPTION_IA_TA				&log &optional; #  3
	iaaddr:				DHCPV6::DHCPV6_OPTION_IAADDR			&log &optional; #  4
    oro:   				DHCPV6::DHCPV6_OPTION_ORO 				&log &optional; #  5
    elapsed_time:		DHCPV6::DHCPV6_OPTION_ELAPSED_TIME		&log &optional; #  6
    vendor_class:		DHCPV6::DHCPV6_OPTION_VENDOR_CLASS		&log &optional; #  7
    name_servers:		DHCPV6::DHCPV6_OPTION_DNS_SERVERS		&log &optional; #  8
    domain_list:		DHCPV6::DHCPV6_OPTION_DOMAIN_LIST		&log &optional; #  9
    ia_pd:				DHCPV6::DHCPV6_OPTION_IA_PD				&log &optional; # 10
    info_refresh_time:	DHCPV6::DHCPV6_OPTION_INFO_REFRESH_TIME	&log &optional; # 11
    client_fqdn:		DHCPV6::DHCPV6_OPTION_CLIENT_FQDN		&log &optional; # 12
};
